{"version":3,"sources":["components/Dashboard.tsx","components/AddBook.tsx","components/EditBook.tsx","api/api.ts","App.tsx","index.tsx"],"names":["Dashboard","books","onDelete","onEdit","className","map","book","title","author","category","ISBN","onClick","id","to","AddBook","onAdd","useState","queryTitle","setQueryTitle","queryAuthor","setQueryAuthor","queryISBN","setQueryISBN","select","setSelect","titleError","setTitleError","authorError","setAuthorError","isbnError","setIsbnError","selectError","setSelectError","handleInputs","event","target","value","name","Number","console","log","onSubmit","preventDefault","Date","ClassNames","type","onChange","htmlFor","disabled","selected","EditBook","React","memo","bookToEdit","getEditedBook","history","useHistory","bookId","setBookId","isEdit","setIsEdit","useEffect","String","setTimeout","push","request","url","options","a","fetch","response","ok","status","statusText","json","deleteBook","method","updateBook","updatedBook","data","headers","body","JSON","stringify","addBook","App","setBooks","reload","setReload","editId","seteditId","loadBooks","loadedBooks","useMemo","find","path","exact","api","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.605d7abc.chunk.js","sourcesContent":["import React from 'react';\nimport { IBook } from '../interfaces';\nimport { NavLink } from 'react-router-dom';\n\ntype DashboardProps = {\n  books: IBook[]\n  onDelete: (id: number) => void\n  onEdit: (id: number) => void\n}\n\nexport const Dashboard: React.FC<DashboardProps> = ({ books, onDelete, onEdit }) => {\n\n  return (\n    <>\n      <div className=\"pad10 deep-purple lighten-2\">\n        <h4 className=\"center-align\">Books List</h4>\n      </div>\n      <table className=\"centered\">\n        <thead className=\"deep-purple lighten-3\">\n          <tr>\n            <th>Book title</th>\n            <th>Author name</th>\n            <th>Category</th>\n            <th>ISBN</th>\n            <th className=\"hide-on-small-only\">Actions</th>\n          </tr>\n        </thead>\n          {books.map(book => (\n            <tbody key={book.id}>\n              <tr className=\"deep-purple lighten-5\">\n                <td>{book.title}</td>\n                <td>{book.author}</td>\n                <td>{book.category}</td>\n                <td>{book.ISBN}</td>\n                <td className=\"hide-on-small-only\">\n                  <a\n                    className=\"btn red mar5\"\n                    onClick={() => {onDelete(book.id)}}\n                  >\n                    <i className=\"material-icons\">delete</i>\n                  </a>\n                  <NavLink\n                    to=\"/edit\"\n                    className=\"deep-purple lighten-2 btn mar5\"\n                    onClick={() => {onEdit(book.id)}}\n                  >\n                    <i className=\"material-icons\">edit</i>\n                  </NavLink>\n                </td>\n              </tr>\n              <tr className=\"hide-on-med-and-up\">\n                <td></td>\n                <td></td>\n                <td>\n                  <a\n                    className=\"btn-floating red\"\n                    onClick={() => {onDelete(book.id)}}\n                  >\n                    <i className=\"material-icons\">delete</i>\n                  </a>\n                </td>\n                <td>\n                  <NavLink\n                    to=\"/edit\"\n                    className=\"btn-floating deep-purple lighten-2\">\n                    <i className=\"material-icons\">edit</i>\n                  </NavLink>\n                </td>\n              </tr>\n            </tbody>\n          ))}\n      </table>\n      <div className=\"pad10 deep-purple lighten-5 center-align\">\n      <NavLink\n        to=\"/add\"\n        className=\"btn deep-purple lighten-2\"\n      >\n        Add new Book\n      </NavLink>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport ClassNames from 'classnames';\nimport { IBook } from '../interfaces';\nimport { NavLink } from 'react-router-dom';\n\ntype AddBookProps = {\n  onAdd: (book: IBook) => void\n}\n\nexport const AddBook: React.FC<AddBookProps> = ({ onAdd }) => {\n  const [queryTitle, setQueryTitle] = useState<string>('');\n  const [queryAuthor, setQueryAuthor] = useState<string>('');\n  const [queryISBN, setQueryISBN] = useState<string>('');\n  const [select, setSelect] = useState<string>('');\n  const [titleError, setTitleError] = useState<boolean>(false);\n  const [authorError, setAuthorError] = useState<boolean>(false);\n  const [isbnError, setIsbnError] = useState<boolean>(false);\n  const [selectError, setSelectError] = useState<boolean>(false);\n\n  const handleInputs = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { value, name } = event.target;\n\n    switch(name) {\n      case 'title':\n        setQueryTitle(value);\n        break;\n      case 'author':\n        setQueryAuthor(value);\n        break;\n      case 'category':\n        setSelect(value);\n        break;\n      case 'ISBN':\n        (Number(value) || value === '') && setQueryISBN(value);\n        console.log(typeof value);\n        break;\n      default:\n        break;\n    };\n  };\n\n  const handleSubmit = (event: any) => {\n    event.preventDefault();\n\n    if (queryTitle && queryAuthor && queryISBN && select) {\n      onAdd({\n        \"title\": queryTitle,\n        \"author\": queryAuthor,\n        \"category\": select,\n        \"ISBN\": +queryISBN,\n        \"id\": +new Date(),\n      });\n      setQueryTitle('');\n      setQueryAuthor('');\n      setQueryISBN('');\n      setSelect('');\n      setTitleError(false);\n      setAuthorError(false);\n      setIsbnError(false);\n      setSelectError(false);\n    }\n\n    !queryTitle && setTitleError(true);\n    !queryAuthor && setAuthorError(true);\n    !queryISBN && setIsbnError(true);\n    !select && setSelectError(true);\n  };\n\n  return (\n    <>\n      <div className=\"pad10 deep-purple lighten-2\">\n        <h4 className=\"center-align\">Add Book</h4>\n      </div>\n      <div className=\"row center-align pad30 deep-purple lighten-5\">\n        <form className=\"col s12\" onSubmit={handleSubmit}>\n          <div className=\"row\">\n            <div className=\"input-field col s8 offset-s2\">\n              <input\n                className={ClassNames({\n                  \"invalid\": titleError,\n                  \"valid\": !titleError,\n                })}\n                name=\"title\"\n                id=\"book_title\"\n                type=\"text\"\n                value={queryTitle}\n                onChange={(event) => {\n                  handleInputs(event);\n                  setTitleError(false);\n                }}\n              />\n              <label htmlFor=\"book_title\">Book title</label>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"input-field col s8 offset-s2\">\n              <input\n                className={ClassNames({\n                  \"invalid\": authorError,\n                  \"valid\": !authorError,\n                })}\n                name=\"author\"\n                id=\"author_name\"\n                type=\"text\"\n                value={queryAuthor}\n                onChange={(event) => {\n                  handleInputs(event);\n                  setAuthorError(false);\n                }}\n              />\n              <label htmlFor=\"author_name\">Author name</label>\n            </div>\n          </div>\n\n          <div className=\"input-field col s6 offset-s3\">\n            {selectError && <span className=\"red-text\">Select any category</span>}\n            <select\n              className=\"browser-default\"\n              name=\"category\"\n              value={select}\n              onChange={(event) => {\n                handleInputs(event);\n                setSelectError(false);\n              }}\n            >\n              <option value=\"\" disabled selected>Choose category</option>\n              <option value=\"novel\">novel</option>\n              <option value=\"myth\">myth</option>\n              <option value=\"horror\">horror</option>\n              <option value=\"poem\">poem</option>\n              <option value=\"autobiography\">autobiography</option>\n              <option value=\"detective\">detective</option>\n              <option value=\"short story\">short story</option>\n            </select>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"input-field col s6 offset-s3\">\n              <input\n                className={ClassNames({\n                  \"invalid\": isbnError,\n                  \"valid\": !isbnError,\n                })}\n                name=\"ISBN\"\n                id=\"ISBN\"\n                type=\"text\"\n                value={queryISBN}\n                onChange={(event) => {\n                  handleInputs(event);\n                  setIsbnError(false);\n                }}\n              />\n              <label htmlFor=\"ISBN\">ISBN</label>\n            </div>\n          </div>\n          <input type=\"submit\" value=\"Add book\" className=\"text-white btn deep-purple lighten-2\" />\n        </form>\n        <NavLink\n          to=\"/\"\n          className=\"btn-floating marT10\"\n        >\n          <i className=\"material-icons\">home</i>\n        </NavLink>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { IBook } from '../interfaces';\nimport { useHistory } from 'react-router-dom';\n\ntype EditBook = {\n  bookToEdit: IBook | undefined\n  getEditedBook: (book: IBook) => void\n}\n\nexport const EditBook: React.FC<EditBook> = React.memo(\n  ({bookToEdit, getEditedBook}) => {\n    const history = useHistory();\n    const [queryTitle, setQueryTitle] = useState<string>('');\n    const [queryAuthor, setQueryAuthor] = useState<string>('');\n    const [queryISBN, setQueryISBN] = useState<string>('');\n    const [select, setSelect] = useState<string>('');\n    const [bookId, setBookId] = useState<number>(0);\n    const [isEdit, setIsEdit] = useState<boolean>(false);\n  \n    useEffect(() => {\n      if (bookToEdit) {\n        setQueryTitle(bookToEdit.title);\n        setQueryAuthor(bookToEdit.author);\n        setQueryISBN(String(bookToEdit.ISBN));\n        setSelect(bookToEdit.category);\n        setBookId(bookToEdit.id);\n      }\n    }, [bookToEdit]);\n  \n    const handleInputs = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n      const { value, name } = event.target;\n  \n      switch(name) {\n        case 'title':\n          setQueryTitle(value);\n          break;\n        case 'author':\n          setQueryAuthor(value);\n          break;\n        case 'category':\n          setSelect(value);\n          break;\n        case 'ISBN':\n          (Number(value) || value === '') && setQueryISBN(value);\n          console.log(typeof value);\n          break;\n        default:\n          break;\n      };\n    };\n  \n    const handleSubmit = (event: any) => {\n      event.preventDefault();\n\n      const editedBook: IBook = {\n        'title': queryTitle,\n        'author': queryAuthor,\n        'category': select,\n        'ISBN': +queryISBN,\n        'id': bookId,\n      };\n      getEditedBook(editedBook);\n      setIsEdit(true);\n\n      setTimeout(() => {\n        setIsEdit(false);\n        history.push('/');\n      }, 3000);\n     \n    };\n  \n    return (\n      <>\n        <div className=\"pad10 deep-purple lighten-2\">\n          <h4 className=\"center-align\">Edit Book</h4>\n        </div>\n        <div className=\"row center-align pad30 deep-purple lighten-5\">\n          <form className=\"col s12\" onSubmit={handleSubmit}>\n            <div className=\"row\">\n              <div className=\"input-field col s8 offset-s2\">\n                Book Title\n                <input\n                  className=\"valid\"\n                  name=\"title\"\n                  type=\"text\"\n                  value={queryTitle}\n                  onChange={(event) => {\n                    handleInputs(event)\n                  }}\n                />\n              </div>\n            </div>\n  \n            <div className=\"row\">\n              <div className=\"input-field col s8 offset-s2\">\n                Author name\n                <input\n                  className=\"valid\"\n                  name=\"author\"\n                  type=\"text\"\n                  value={queryAuthor}\n                  onChange={(event) => {\n                    handleInputs(event)\n                  }}\n                />\n              </div>\n            </div>\n  \n            <div className=\"input-field col s6 offset-s3\">\n              Category\n              <select\n                className=\"browser-default\"\n                name=\"category\"\n                onChange={handleInputs}\n                value={select}\n              >\n                <option value=\"\" disabled selected>Choose category</option>\n                <option value=\"novel\">novel</option>\n                <option value=\"myth\">myth</option>\n                <option value=\"horror\">horror</option>\n                <option value=\"poem\">poem</option>\n                <option value=\"autobiography\">autobiography</option>\n                <option value=\"detective\">detective</option>\n                <option value=\"short story\">short story</option>\n              </select>\n            </div>\n  \n            <div className=\"row\">\n              <div className=\"input-field col s6 offset-s3\">\n                International Standard Book Number\n                <input\n                  className=\"valid\"\n                  name=\"ISBN\"\n                  type=\"text\"\n                  value={queryISBN}\n                  onChange={(event) => {\n                    handleInputs(event)\n                  }}\n                />\n              </div>\n            </div>\n            {isEdit &&\n              <div className=\"row deep-purple lighten-3\">\n                <div\n                  className=\"input-field col s6 offset-s3\"\n                >\n                  the book has been successfully edited\n                </div>\n              </div>\n            }\n            <input\n              type=\"submit\"\n              value=\"Edit\"\n              className=\"text-white btn deep-purple lighten-2\"\n            />\n          </form>\n        </div>\n      </>\n    );\n  },\n);\n","import { IBook } from '../interfaces';\n\nconst BASE_URL = 'http://localhost:3004';\n\nconst request = async(url: string, options?: object) => {\n  const response = await fetch(`${BASE_URL}${url}`, options)\n    if (!response.ok) {\n      throw `${response.status} - ${response.statusText}`\n    }\n    return response.json();\n};\n\nconst post = (url: string, data: IBook) => {\n  return request(url, {\n    method: 'POST',\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    },\n    body: JSON.stringify(data),\n  })\n}\n\nconst patch = (url: string, data: object) => {\n  return request(url, {\n    method: 'PATCH',\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    },\n    body: JSON.stringify(data),\n  });\n}\n\nconst remove = (url: string) => {\n  return request(url, {method: 'DELETE'});\n}\n\nexport const deleteBook = (bookId: number) => {\n  return remove(`/books/${bookId}`);\n}\n\nexport const updateBook = (bookId: number, updatedBook: object) => {\n  return patch(`/books/${bookId}`, updatedBook);\n}\n\nexport const addBook = (book: IBook) => {\n  return post('/books', {\n    ...book,\n  });\n}\n\nexport const getBooks = () => request('/books');\n\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Redirect, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport { Dashboard } from './components/Dashboard';\nimport { AddBook } from './components/AddBook';\nimport { EditBook } from './components/EditBook';\nimport { IBook } from './interfaces';\nimport * as api from './api/api';\n\nconst App: React.FC = () => {\n  const [books, setBooks] = useState<IBook[]>([]);\n  const [reload, setReload] = useState<boolean>(false);\n  const [editId, seteditId] = useState<number>(0);\n\n  useEffect(() => {\n    loadBooks()\n  }, [reload]);\n\n  const loadBooks = async() => {\n    const loadedBooks = await api.getBooks();\n\n    setBooks(loadedBooks);\n  };\n\n  const onRemove = (id: number) => {\n    api.deleteBook(id);\n    setReload(!reload);\n  };\n\n  const onEdit = (id: number) => {\n    seteditId(id);\n  };\n\n  const onAdd = (book: IBook) => {\n    api.addBook(book);\n    setReload(!reload);\n  };\n\n  const setEditedBook = (book: IBook) => {\n    api.updateBook(book.id, book)\n    setReload(!reload);\n  };\n\n  const bookToEdit: IBook | undefined = useMemo(() => {\n    return books.find(book => book.id === editId)\n  }, [editId]);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" exact>\n          <Dashboard\n            books={books}\n            onDelete={onRemove}\n            onEdit={onEdit}\n          />\n        </Route>\n        <Route path=\"/add\">\n          <AddBook onAdd={onAdd}/>\n        </Route>\n        <Route path=\"/edit\">\n          <EditBook bookToEdit={bookToEdit} getEditedBook={setEditedBook} />\n        </Route>\n\n        <Redirect to=\"/\" />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}